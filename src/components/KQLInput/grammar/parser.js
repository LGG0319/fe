import { LRParser } from '@lezer/lr';
import { NodeProp } from '@lezer/common';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = LRParser.deserialize({
  version: 13,
  states: "!|OVQPOOQeQQOOOVQPO'#CeOmQPO'#CfOOQO'#C_'#C_OVQPO,58zOVQPO,58zO!OQQO,59POOQO'#Ch'#ChO!ZQPO,59QOOQO1G.f1G.fO!cQQO1G.fOOQO1G.k1G.kOOQO'#Cn'#CnOOQO1G.l1G.l",
  stateData: '!q~OPOS~OVSOWSOZROeQO~OTTOUUO~O]WO^WO_WO`WOaWO~OTTOUUOf[O~OV]OW]O~OTTOUSicSifSi~O',
  goto: '|cPPPdpPPPPppPvPPPPPyQPOQVQQYTRZUXSOQTURXRR^X',
  nodeNames: 'âš  LineComment KQL Expr BinaryExpr And Or StringLiteral NumberLiteral ParenExpr VectorSelector FieldName MatchOperator Colon Gtr Gte Lss Lte FieldValue',
  maxTerm: 22,
  nodeProps: [[NodeProp.group, 3, 'Statement']],
  skippedNodes: [0, 1],
  repeatNodeCount: 0,
  tokenData:
    "(a~R_rs!Qst!txy#Pyz#U!Q![#Z![!]$l!^!_$q!`!a%O!b!c%]!c!d%q!d!q%]!q!r'_!r!}%]#R#S%]#T#o%]~!VUV~OY!QZr!Qrs!is#O!Q#O#P!n#P~!Q~!nOV~~!qPO~!Q~!yQP~OY!tZ~!t~#UOe~~#ZOf~~#`SW~!O!P#l!Q![#Z!g!h$Q#X#Y$Q~#oP!Q![#r~#wRW~!Q![#r!g!h$Q#X#Y$Q~$TR{|$^}!O$^!Q![$d~$aP!Q![$d~$iPW~!Q![$d~$qO]~~$vP`~!_!`$y~%OOa~~%TP^~!_!`%W~%]O_~P%bTZP!O!P%]!Q![%]!c!}%]#R#S%]#T#o%]R%vVZP!O!P%]!Q![%]!c!p%]!p!q&]!q!}%]#R#S%]#T#o%]R&bVZP!O!P%]!Q![%]!c!f%]!f!g&w!g!}%]#R#S%]#T#o%]R'OTTQZP!O!P%]!Q![%]!c!}%]#R#S%]#T#o%]R'dVZP!O!P%]!Q![%]!c!t%]!t!u'y!u!}%]#R#S%]#T#o%]R(QTZPUQ!O!P%]!Q![%]!c!}%]#R#S%]#T#o%]",
  tokenizers: [0, 1],
  topRules: { KQL: [0, 2] },
  tokenPrec: 0,
});
// This file was generated by lezer-generator. You probably shouldn't edit it.
const LineComment = 1,
  KQL = 2,
  Expr = 3,
  BinaryExpr = 4,
  And = 5,
  Or = 6,
  StringLiteral = 7,
  NumberLiteral = 8,
  ParenExpr = 9,
  VectorSelector = 10,
  FieldName = 11,
  MatchOperator = 12,
  Colon = 13,
  Gtr = 14,
  Gte = 15,
  Lss = 16,
  Lte = 17,
  FieldValue = 18;

export {
  And,
  BinaryExpr,
  Colon,
  Expr,
  FieldName,
  FieldValue,
  Gte,
  Gtr,
  KQL,
  LineComment,
  Lss,
  Lte,
  MatchOperator,
  NumberLiteral,
  Or,
  ParenExpr,
  StringLiteral,
  VectorSelector,
  parser,
};
